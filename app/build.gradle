/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.8/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'org.springframework.boot' version '3.5.3'
    id 'io.spring.dependency-management' version '1.1.7'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    //web dependency
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // spring-data-jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    //MySQL jdbc driver
    implementation 'mysql:mysql-connector-java:8.0.33'

    //spring-security
    implementation "org.springframework.boot:spring-boot-starter-security"

    implementation "io.jsonwebtoken:jjwt-api:0.12.6"
    implementation"io.jsonwebtoken:jjwt-impl:0.12.6"
    implementation "io.jsonwebtoken:jjwt-jackson:0.12.6"


    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter


    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation libs.guava
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'org.example.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
